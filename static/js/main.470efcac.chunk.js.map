{"version":3,"sources":["SidebarOption.js","Sidebar.js","firebase.js","Tweetbox.js","Post.js","Feed.js","Widgets.js","App.js","index.js"],"names":["SidebarOption","active","text","Icon","className","Sidebar","class","HomeIcon","ExploreIcon","NotificationsNoneIcon","MailOutlineIcon","BookmarkBorderIcon","ListAltIcon","PersonIcon","MoreHorizIcon","Button","variant","fullWidth","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","Tweetbox","useState","tweetMessage","setTweetMessage","tweetImage","setTweetImage","Avatar","src","onChange","e","target","value","placeholder","type","onClick","preventDefault","collection","add","displayName","username","verified","image","avatar","Post","forwardRef","ref","fontSize","Feed","posts","setPosts","useEffect","onSnapshot","snapshot","docs","map","doc","data","post","tweetId","Widgets","sourceType","screenName","options","height","url","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.470efcac.chunk.js","sourcesContent":["import React from 'react';\nimport './sidebarOption.css';\n\nfunction SidebarOption({active, text, Icon}) {\n    return (\n        <div className={`sidebarOption ${active && 'sidebarOption--active'}`}>\n            <Icon/>\n            <h2>{text}</h2>\n        </div>\n    )\n}\n\nexport default SidebarOption\n","import React from 'react';\nimport './Sidebar.css';\nimport SidebarOption from './SidebarOption';\nimport TwitterIcon from '@material-ui/icons/Twitter';\nimport HomeIcon from '@material-ui/icons/Home';\nimport ExploreIcon from '@material-ui/icons/Explore';\nimport NotificationsNoneIcon from '@material-ui/icons/NotificationsNone';\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\nimport BookmarkBorderIcon from '@material-ui/icons/BookmarkBorder';\nimport ListAltIcon from '@material-ui/icons/ListAlt';\nimport PersonIcon from '@material-ui/icons/Person';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport { Button } from \"@material-ui/core\";\nfunction Sidebar() {\n    return (\n        <div class=\"sidebar\">\n            <TwitterIcon className='twiiterIcon'/>\n            <SidebarOption active Icon={HomeIcon} text=\"Home\"/>\n            <SidebarOption Icon={ExploreIcon} text=\"Explore\"/>            \n            <SidebarOption Icon={NotificationsNoneIcon} text=\"Notifications\"/>            \n            <SidebarOption Icon={MailOutlineIcon} text=\"Messages\"/>            \n            <SidebarOption Icon={BookmarkBorderIcon} text=\"Bookmarks\"/>\n            <SidebarOption Icon={ListAltIcon} text=\"Lists\"/>\n            <SidebarOption Icon={PersonIcon} text=\"Profile\"/>\n            <SidebarOption Icon={MoreHorizIcon} text=\"More\"/>\n            <Button variant=\"outlined\" className='sidebar_tweet' fullWidth>\n                Tweet</Button>\n        </div>\n    )\n}\n\nexport default Sidebar;\n","import firebase from \"firebase/compat\";\nconst firebaseConfig = {\n  apiKey: \"AIzaSyDHWpI2lrLNyDYKnT5UHMT3MAi0HICwHoY\",\n  authDomain: \"twitter-3100f.firebaseapp.com\",\n  projectId: \"twitter-3100f\",\n  storageBucket: \"twitter-3100f.appspot.com\",\n  messagingSenderId: \"607812864508\",\n  appId: \"1:607812864508:web:61db0a302a4d958a268a79\",\n  measurementId: \"G-2ERLT8BGXL\"\n};\n\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\n\nconst db = firebaseApp.firestore();\n\nexport default db;","import {React, useState} from 'react';\nimport './Tweetbox.css';\nimport {Avatar,Button} from '@material-ui/core';\nimport db from \"./firebase\";\nfunction Tweetbox() {\n    const [tweetMessage, setTweetMessage] = useState(\"\");\n    const [tweetImage, setTweetImage] = useState(\"\");\n    \n  const sendTweet = (e) => {\n    e.preventDefault();\n\n    db.collection(\"posts\").add({\n      displayName: \"Sachin Rajput\",\n      username: \"sachin108\",\n      verified: true,\n      text: tweetMessage,\n      image: tweetImage,\n      avatar:\n        \"https://i.pinimg.com/474x/cf/75/60/cf7560a95b149dd8ac0c65549e02df98.jpg\",\n    });\n\n    setTweetMessage(\"\");\n    setTweetImage(\"\");\n  };\n\n    return (\n        <div className='tweetBox'>\n            <form>\n                <div className='tweetbox_input'>\n                <Avatar src=\"https://i.pinimg.com/474x/cf/75/60/cf7560a95b149dd8ac0c65549e02df98.jpg\"/>\n                <input \n                onChange={(e) => setTweetMessage(e.target.value)}\n                value={tweetMessage} placeholder=\"What's happening?\" type=\"text\"/>\n                </div>\n                <input\n                    value={tweetImage}\n                    onChange={(e) => setTweetImage(e.target.value)}\n                    className=\"imageInput\"\n                    placeholder=\"Optional: Enter image URL\"\n                    type=\"text\"\n                />\n                <Button\n                onClick={sendTweet} type=\"submit\" className=\"tweetButton\">\n                Tweet\n                </Button>\n            </form>\n        </div>\n    )\n}\n\nexport default Tweetbox\n","import React, {forwardRef} from 'react';\nimport './Post.css';\nimport {Avatar,Button} from '@material-ui/core';\nimport RepeatIcon from '@material-ui/icons/Repeat';\nimport PublishIcon from '@material-ui/icons/Publish';\nimport FavoriteBorderIcon from '@material-ui/icons/FavoriteBorder';\nimport ChatBubbleOutlineIcon from '@material-ui/icons/ChatBubbleOutline';\nimport VerifiedUserIcon from '@material-ui/icons/VerifiedUser';\n\nconst Post = forwardRef(\n    ({ displayName, username, verified, text, image, avatar }, ref) => {\n    return (\n        <div className=\"post\" ref={ref}>\n            <div>\n                <Avatar src={avatar}/>\n            </div>\n            <div className='post_body'>\n                <div className='post_header'>\n                    <div className='post_headerText'>\n                        <h3>{displayName}{\" \"} \n                            <span className='postHeader'>{verified && <VerifiedUserIcon className=\"userBadge\" />} \n                            @{username}</span>\n                        </h3>\n                    </div>\n                    <div className='postHeaderDescription'><p>{text}</p>\n                    </div>\n                </div>\n                <img src={image}/>\n                <div className='post_footer'>\n                    <ChatBubbleOutlineIcon fontSize='small'/>\n                    <RepeatIcon fontSize='small'/>\n                    <FavoriteBorderIcon fontSize='small'/>\n                    <PublishIcon fontSize='small'/>\n                </div>\n            </div>\n        </div>\n    );\n}\n);\nexport default Post\n","import React from 'react';\nimport './Feed.css';\nimport Tweetbox from './Tweetbox';\nimport Post from './Post';\nimport { useState, useEffect } from 'react';\nimport db from \"./firebase\";\nimport {\n    TwitterTimelineEmbed, \n    TwitterShareButton,\n    TwitterTweetEmbed\n} from \"react-twitter-embed\";\nimport FlipMove from \"react-flip-move\";\n\nfunction Feed() {\n    const [posts, setPosts] = useState([]);\n\n    useEffect(() => {\n      db.collection(\"posts\").onSnapshot((snapshot) =>\n        setPosts(snapshot.docs.map((doc) => doc.data()))\n      );\n    }, []);\n    return (\n        <div className='feed'>\n            <div className='feed_header'>\n                <h3>Home</h3>\n            </div>\n            \n        <Tweetbox />\n        <FlipMove>\n            {posts.map((post) => (\n            <Post\n                key={post.text}\n                displayName={post.displayName}\n                username={post.username}\n                verified={post.verified}\n                text={post.text}\n                avatar={post.avatar}\n                image={post.image}\n            />\n            ))}\n            <TwitterTweetEmbed tweetId={\"1383111548546162690\"} /> \n            <TwitterTweetEmbed tweetId={\"1460963731806904326\"} />                 \n            <TwitterTweetEmbed tweetId={\"1461955219806380034\"} />                \n            <TwitterTweetEmbed tweetId={\"1367927969046556674\"} />                 \n            <TwitterTweetEmbed tweetId={\"1460629722707243010\"} />                 \n            <TwitterTweetEmbed tweetId={\"1402664284912508937\"} />                                \n            <TwitterTweetEmbed tweetId={\"1385322517678628871\"} />  \n            <TwitterTweetEmbed tweetId={\"1454855696286199810\"} />  \n            <TwitterTweetEmbed tweetId={\"1462153800635060230\"} />                \n            <TwitterTweetEmbed tweetId={\"1461110156717133831\"} />       \n        </FlipMove>             \n        </div>\n\n    )\n}\n\nexport default Feed\n","import React from 'react';\nimport './Widgets.css';\nimport {\n    TwitterTimelineEmbed, \n    TwitterShareButton,\n    TwitterTweetEmbed\n} from \"react-twitter-embed\";\nimport SearchIcon from '@material-ui/icons/Search';\nfunction Widgets() {\n    return (\n        <div className='widgets'>\n            <div className=\"widgets_input\">\n                <SearchIcon className=\"widgets_searchIcon\"/>\n                <input placeholder=\"  Search Twitter\" type=\"text\"/>\n            </div>\n            <div className=\"widgets_container\">\n                <h3>What's happening</h3>\n                <TwitterTweetEmbed tweetId={\"1457754817569361925\"} />                \n                <TwitterTweetEmbed tweetId={\"1458090274471743488\"} />\n                <TwitterTweetEmbed tweetId={\"858551177860055040\"} />\n                <TwitterTimelineEmbed sourceType=\"profile\" screenName=\"earth\" options={{ height: 400 }}/>\n                <TwitterShareButton url={\"https://www.instagram.com/gameofthrones/\"}/>\n           </div>\n        </div>\n    )\n}\n\nexport default Widgets\n","import React from 'react';\nimport './App.css';\nimport Sidebar from './Sidebar';\nimport Feed from './Feed';\nimport Widgets from './Widgets';\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Sidebar/>\n        <Feed/>\n        <Widgets/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n//reportWebVitals();\n"],"sourceRoot":""}